{"version":3,"sources":["constants/data.ts","client.ts","state/reducer.ts","state/store.ts","components/Flex/Flex.tsx","components/Box/Box.tsx","components/Card/Card.tsx","components/Text/Text.tsx","components/Icon/Icon.tsx","components/Button/Button.tsx","theme/colors.ts","theme/typography.ts","theme/radii.ts","theme/space.ts","theme/variants/buttons.ts","theme/variants/cards.ts","theme/index.ts","state/hooks.ts","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["protocols","aave","name","executionUrl","compound","yearn","GRAPH_BASE_URL","aaveQuery","gql","compoundQuery","fetchCompoundRates","a","request","markets","rates","map","market","protocol","displayName","symbol","fixed","opportunityAsset","underlyingSymbol","address","underlyingAddress","decimals","underlyingAssets","rawApr","supplyRate","fetchAaveRates","reserves","console","log","aToken","id","liquidityRate","fetchAllRates","Promise","all","compoundRates","aaveRates","fetchRates","createAsyncThunk","application","createSlice","initialState","reducers","extraReducers","fulfilled","state","action","payload","store","configureStore","reducer","applicationReducer","Flex","ReFlex","Box","ReBox","Card","variant","props","variantTagName","as","test","toLowerCase","Text","Icon","className","color","_color","sx","size","theme","useThemeUI","_get","colors","ButtonIcon","ButtonText","Button","icon","children","variantTheme","buttons","pl","pr","path","primary","primaryDark","secondary","tertiary","border","black","white","background","blue","yellow","red","text","textLight","textGray","textLink","fontSizesScale","fontSizesScaleObject","bigTitle","h1","h2","h3","h4","h5","h6","subhead","body1","body2","button","caption1","caption2","error","fontSizes","Object","assign","letterSpacingsScale","letterSpacingsScaleObject","mono","createTextVariant","fontWeight","opts","fontFamily","fontSize","letterSpacing","px","typography","fonts","default","fontWeights","regular","semibold","bold","letterSpacings","textTransform","my","radiiScale","radiiScaleObject","slight","small","medium","large","circle","radii","spaceScale","Array","fill","_","i","space","common","display","justifyContent","alignItems","boxSizing","height","minHeight","borderRadius","userSelect","cursor","py","transition","bg","outline","boxShadow","cards","borderColor","breakpoints","variants","useAppSelector","useSelector","useAsyncRates","dispatch","useDispatch","fetchRatesAction","InnerComponentForReduxProvider","useEffect","App","width","maxWidth","mt","mb","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7515ac3.chunk.js","sourcesContent":["import { Protocol } from 'types/shared';\n\nexport const protocols: { [key: string]: Protocol } = {\n  aave: {\n    name: 'aave',\n    executionUrl: 'https://app.aave.com',\n  },\n  compound: {\n    name: 'compound',\n    executionUrl: 'https://app.compound.finance',\n  },\n  yearn: {\n    name: 'yearn',\n    executionUrl: 'https://yearn.finance/vaults',\n  },\n};\n","import axios from 'axios';\nimport { request, gql } from 'graphql-request';\nimport { OpportunityShell } from './types/shared';\nimport { protocols } from './constants/data';\n\nconst GRAPH_BASE_URL = 'https://api.thegraph.com/subgraphs/name';\nconst BANCOR_BASE_URL = 'https://api-v2.bancor.network';\nconst YEARN_BASE_URL = 'https://dev-api.yearn.tools';\n// ASK IN CURVE DISCORD FOR REAL API ENDPOINT\nconst CURVE_BASE_URL = 'https://curvemarketcap.com/datatable.json';\n\n/*\n * GRAPHQL QUERIES\n */\n\nconst aaveQuery = gql`\n  {\n    reserves(first: 50) {\n      # id is atoken address\n      id\n      name\n      liquidityRate\n      liquidityIndex\n      symbol\n      isActive\n      aToken {\n        # underlying token address\n        id\n      }\n    }\n  }\n`;\n\nconst compoundQuery = gql`\n  {\n    markets(first: 50) {\n      # id is ctoken address\n      id\n      name\n      supplyRate\n      symbol\n      underlyingSymbol\n      underlyingAddress\n    }\n  }\n`;\n\n// Fetch functions need to return Opportunity Skeleton\n// That will be filled in via web3\nexport const fetchCompoundRates = async (): Promise<OpportunityShell[]> => {\n  const { markets } = await request(\n    `${GRAPH_BASE_URL}/graphprotocol/compound-v2`,\n    compoundQuery\n  );\n  const rates: OpportunityShell[] = markets.map((market: any) => {\n    return {\n      protocol: protocols['compound'],\n      displayName: `Compound ${market.symbol}`,\n      symbol: market.symbol,\n      fixed: false,\n      opportunityAsset: {\n        name: 'test',\n        symbol: market.underlyingSymbol,\n        address: market.underlyingAddress,\n        decimals: 18,\n      },\n      underlyingAssets: [\n        {\n          name: 'test',\n          symbol: market.underlyingSymbol,\n          address: market.underlyingAddress,\n          decimals: 18,\n        },\n      ],\n      // Approximation for how much the compound supply rate undershoots the actual # of blocks per year\n      rawApr: market.supplyRate * 1.15,\n    };\n  });\n  return rates;\n};\n\nexport const fetchAaveRates = async (): Promise<OpportunityShell[]> => {\n  const { reserves } = await request(\n    `${GRAPH_BASE_URL}/aave/protocol-v2`,\n    aaveQuery\n  );\n  console.log({ reserves });\n  const rates: OpportunityShell[] = reserves.map((market: any) => {\n    return {\n      protocol: protocols['aave'],\n      displayName: `Aave ${market.symbol}`,\n      symbol: market.symbol,\n      fixed: false,\n      opportunityAsset: {\n        address: market.aToken.id,\n        name: 'Aave Dai',\n        symbol: 'aDai',\n        decimals: 18,\n      },\n      underlyingAssets: [\n        {\n          name: 'test Dai',\n          symbol: 'dai',\n          address: market.id,\n          decimals: 18,\n        },\n      ],\n      rawApr: market.liquidityRate,\n    };\n  });\n  return rates;\n};\n\nexport const fetchYearnRates = async (): Promise<OpportunityShell> => {\n  const { data } = await axios.get(`${YEARN_BASE_URL}/vaults`, {\n    params: {\n      apy: true,\n    },\n  });\n  // const opportunities: OpportunityShell[] = data.map((market: any) => {\n  //   return {\n  //     protocol: protocols['yearn'],\n  //     displayName: market.name,\n  //     symbol: market.symbol,\n  //     fixed: false,\n  //     opportunityAsset: {\n  //       name: 'Aave Dai',\n  //       symbol: 'aDai',\n  //       address: market.id,\n  //       decimals: 18,\n  //     },\n  //     underlyingAssets: [\n  //       {\n  //         name: 'test Dai',\n  //         symbol: 'dai',\n  //         address: market.aToken.id,\n  //         decimals: 18,\n  //       },\n  //     ],\n  //     rawApr: market.liquidityRate,\n  //   };\n  // });\n  // return opportunities;\n  return data;\n};\n\nexport const fetchBancorRates = async (): Promise<OpportunityShell> => {\n  const { data } = await axios.get(`${BANCOR_BASE_URL}/pools`);\n  return data;\n};\n\nexport const fetchCurveRates = async (): Promise<OpportunityShell> => {\n  const { data } = await axios.get(`${CURVE_BASE_URL}`);\n  return data;\n};\n\nexport const fetchAllRates = async (): Promise<any> => {\n  const [compoundRates, aaveRates] = await Promise.all([\n    fetchCompoundRates(),\n    fetchAaveRates(),\n  ]);\n  return [...compoundRates, ...aaveRates];\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllRates } from '../client';\n\nexport const fetchRates = createAsyncThunk('user/fetchSecret', async () => {\n  const rates = await fetchAllRates();\n  return rates;\n});\n\n// @ts-ignore\nexport const application = createSlice({\n  name: 'application',\n  initialState: {\n    rates: {} as any,\n  },\n  reducers: {},\n  extraReducers: {\n    // @ts-ignore\n    [fetchRates.fulfilled]: (state, action) => {\n      state.rates = action.payload;\n    },\n  },\n});\n\nexport default application.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport applicationReducer from './reducer';\n\nexport const store = configureStore({\n  reducer: {\n    application: applicationReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import styled from '@emotion/styled/macro';\nimport { Flex as ReFlex, FlexProps as ReFlexProps } from 'rebass';\n\nexport interface FlexProps extends Omit<ReFlexProps, BrokenRebassProps> {}\n\nexport const Flex = styled(ReFlex)<FlexProps>`\n  box-sizing: border-box;\n`;\n","import styled from '@emotion/styled/macro';\nimport { Box as ReBox, BoxProps as ReBoxProps } from 'rebass';\n\nexport interface BoxProps extends Omit<ReBoxProps, BrokenRebassProps> {}\n\nexport const Box = styled(ReBox)<BoxProps>`\n  box-sizing: border-box;\n`;\n","import React from 'react';\nimport { Box, BoxProps } from 'components/Box/Box';\n\nexport interface CardProps extends BoxProps {}\n\nexport const Card: React.FC<BoxProps> = ({ variant = 'primary', ...props }) => (\n  <Box variant={`cards.${variant}`} {...props} />\n);\n","import React from 'react';\nimport { Text as RebassText, TextProps as RebassTextProps } from 'rebass';\n\nexport interface TextProps extends Omit<RebassTextProps, BrokenRebassProps> {}\n\nconst variantTagName = (\n  variant: any,\n  as: React.ElementType<any>\n): React.ElementType<any> => {\n  if (/h\\d/i.test(variant)) return variant.toLowerCase();\n  if (variant === 'bigTitle') return 'h1';\n  return as || 'span';\n};\n\nexport const Text: React.FC<TextProps> = ({\n  as = 'span',\n  variant = 'body1',\n  ...props\n}) => (\n  <RebassText as={variantTagName(variant, as)} {...{ variant, ...props }} />\n);\n","import React from 'react';\nimport MdiIcon from '@mdi/react';\nimport { IconProps as MdiIconProps } from '@mdi/react/dist/IconProps';\nimport { Box, BoxProps } from 'components/Box/Box';\nimport { useThemeUI } from 'theme-ui';\nimport _get from 'lodash/get';\n\ntype UsedBoxProps = 'sx' | 'className' | 'as' | 'variant';\n\nexport interface IconProps extends MdiIconProps, Pick<BoxProps, UsedBoxProps> {}\n\nexport const Icon: React.FC<IconProps> = ({\n  className,\n  color: _color = 'text.primary',\n  sx = {},\n  as = 'span',\n  variant,\n  size = 1,\n  ...props\n}) => {\n  const { theme } = useThemeUI();\n  const color = (_get(theme.colors, _color as string) as string) ?? _color;\n  return (\n    <Box {...{ sx, className, as, variant }}>\n      <MdiIcon {...{ size, color }} {...props} />\n    </Box>\n  );\n};\n","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport { Button as ReButton, ButtonProps as ReButtonProps } from 'rebass';\nimport { Icon } from 'components/Icon';\nimport { Text } from 'components/Text';\nimport { useThemeUI } from 'theme-ui';\n\nexport interface ButtonProps extends Omit<ReButtonProps, BrokenRebassProps> {\n  variant?: string;\n  icon?: string;\n}\n\nconst ButtonIcon = styled(Icon)`\n  position: absolute;\n  height: 18px;\n  left: -31px;\n  transition: 200ms linear;\n`;\n\nconst ButtonText = styled(Text)`\n  position: relative;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: inherit;\n  color: inherit;\n  white-space: nowrap;\n`;\n\nexport const Button: React.FC<ButtonProps> = ({\n  as = 'button',\n  variant = 'primary',\n  sx = {},\n  icon,\n  children,\n  ...props\n}) => {\n  const { theme } = useThemeUI();\n  const variantTheme: any = theme.buttons?.[variant];\n  const color: string = variantTheme?.color ?? 'white';\n\n  return (\n    <ReButton\n      {...{ as, variant, ...props }}\n      sx={{ ...sx, ...(icon ? { pl: '45px', pr: '40px' } : {}) }}\n    >\n      {typeof children !== 'string' ? (\n        children\n      ) : (\n        <ButtonText>\n          {!!icon && <ButtonIcon path={icon} size={0.75} {...{ color }} />}\n          {children}\n        </ButtonText>\n      )}\n    </ReButton>\n  );\n};\n","interface IColorsType {\n  [color: string]: string;\n}\n\nexport const colors: IColorsType = {\n  primary: '#54aa8b',\n  primaryDark: '#499579',\n  secondary: '#f8fafd',\n  tertiary: '#f0f3f6',\n  border: '#E0E4EC',\n  black: '#3a3d42',\n  white: '#ffffff',\n  background: '#FCFDFD',\n  blue: '#4fa7d9',\n  yellow: '#e3be3c',\n  red: '#D9684F',\n  text: '#505050',\n  textLight: 'rgba(80, 80, 80, 0.5)',\n  textGray: '#7e8da5',\n  textLink: '#0000ff',\n};\n","interface ITypographyScaleArray<T>\n  extends IThemeScaleArray<\n    T,\n    {\n      h1: number | string;\n      h2: number | string;\n      h3: number | string;\n      h4: number | string;\n      h5: number | string;\n      h6: number | string;\n      subhead: number | string;\n      body1: number | string;\n      body2: number | string;\n      button: number | string;\n      caption1: number | string;\n      caption2: number | string;\n    }\n  > {}\n\ninterface ITypography {\n  fonts: { [variant: string]: string };\n  fontWeights: { [variant: string]: number };\n  fontSizes: ITypographyScaleArray<number | string>;\n  letterSpacings: ITypographyScaleArray<number | string>;\n  text: { [variant: string]: { [styleProp: string]: string | number } };\n}\n\n/**\n * System-UI font-size scale\n */\nconst fontSizesScale = [10, 12, 14, 16, 18, 20, 22, 24, 28, 34, 42];\nconst fontSizesScaleObject = {\n  bigTitle: fontSizesScale[10],\n  h1: fontSizesScale[9],\n  h2: fontSizesScale[8],\n  h3: fontSizesScale[6],\n  h4: fontSizesScale[4],\n  h5: fontSizesScale[3],\n  h6: fontSizesScale[2],\n  subhead: fontSizesScale[5],\n  body1: fontSizesScale[3],\n  body2: fontSizesScale[2],\n  button: fontSizesScale[2],\n  caption1: fontSizesScale[1],\n  caption2: fontSizesScale[0],\n  error: fontSizesScale[2],\n};\nconst fontSizes: ITypographyScaleArray<number | string> = Object.assign(\n  fontSizesScale,\n  fontSizesScaleObject\n);\n\n/**\n * System-UI letter-spacing scale\n */\nconst letterSpacingsScale = [-1, -0.75, -0.5, -0.25, 0, 0.1, 0.15, 0.4, 1.5];\nconst letterSpacingsScaleObject = {\n  bigTitle: letterSpacingsScale[0],\n  h1: letterSpacingsScale[1],\n  h2: letterSpacingsScale[2],\n  h3: letterSpacingsScale[3],\n  h4: letterSpacingsScale[4],\n  h5: letterSpacingsScale[5],\n  h6: letterSpacingsScale[6],\n  subhead: letterSpacingsScale[5],\n  body1: letterSpacingsScale[6],\n  body2: letterSpacingsScale[6],\n  button: letterSpacingsScale[3],\n  caption1: letterSpacingsScale[7],\n  caption2: letterSpacingsScale[8],\n  error: letterSpacingsScale[6],\n  mono: letterSpacingsScale[6],\n};\nconst letterSpacings: ITypographyScaleArray<number> = Object.assign(\n  letterSpacingsScale,\n  letterSpacingsScaleObject\n);\n\n/**\n * Helper function to keep text variant definitions a bit more dry\n */\nconst createTextVariant = (\n  variant: string,\n  fontWeight: string,\n  opts?: { [styleName: string]: string | number }\n) => ({\n  fontFamily: 'default',\n  fontSize: variant,\n  letterSpacing: variant,\n  color: 'text.primary',\n  px: 0,\n  fontWeight,\n  ...opts,\n});\n\n/**\n * Complete `typography` theme export\n */\nexport const typography: ITypography = {\n  fonts: {\n    default: \"'Open Sans', sans-serif\",\n  },\n  fontWeights: {\n    regular: 400,\n    semibold: 600,\n    bold: 700,\n  },\n  fontSizes,\n  letterSpacings,\n  text: {\n    bigTitle: createTextVariant('bigTitle', 'semibold'),\n    h1: createTextVariant('h1', 'semibold'),\n    h2: createTextVariant('h2', 'semibold'),\n    h3: createTextVariant('h3', 'semibold'),\n    h4: createTextVariant('h4', 'semibold'),\n    h5: createTextVariant('h5', 'semibold'),\n    h6: createTextVariant('h6', 'semibold'),\n    subhead: createTextVariant('subhead', 'regular'),\n    body1: createTextVariant('body1', 'regular'),\n    body2: createTextVariant('body2', 'regular'),\n    button: createTextVariant('button', 'semibold'),\n    caption1: createTextVariant('caption1', 'regular'),\n    caption2: createTextVariant('caption2', 'semibold', {\n      textTransform: 'uppercase',\n    }),\n    error: createTextVariant('error', 'bold', {\n      my: '0.8em',\n      color: 'accents.red',\n    }),\n  },\n};\n","interface IRadiiScaleArray<T>\n  extends IThemeScaleArray<\n    T,\n    {\n      slight: number | string;\n      small: number | string;\n      medium: number | string;\n      large: number | string;\n      circle: string;\n    }\n  > {}\n\nconst radiiScale = [5, 10, 15, 20, '100%'];\nconst radiiScaleObject = {\n  slight: radiiScale[0],\n  small: radiiScale[1],\n  medium: radiiScale[2],\n  large: radiiScale[3],\n  circle: radiiScale[4],\n};\n\nexport const radii: IRadiiScaleArray<number | string> = Object.assign(\n  radiiScale,\n  radiiScaleObject\n);\n","interface ISpaceScaleArray<T>\n  extends IThemeScaleArray<T, Record<string, unknown>> {\n  // ...to do? maybe?\n}\n\nconst spaceScale = new Array(14).fill(0).map((_, i) => `${i * 0.25}em`);\nconst spaceScaleObject = {\n  // if we need it?\n};\n\nexport const space: ISpaceScaleArray<number | string> = Object.assign(\n  spaceScale,\n  spaceScaleObject\n);\n","import { colors } from '../colors';\nimport { typography } from '../typography';\n\nconst common = {\n  ...typography.text.body2,\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  boxSizing: 'border-box',\n  height: '30px',\n  minHeight: '30px',\n  fontWeight: 'semibold',\n  borderRadius: 'large',\n  userSelect: 'none',\n  cursor: 'pointer',\n  px: '1.5em',\n  py: '0.5em',\n  transition: '200ms linear',\n};\n\nexport const buttons = {\n  primary: {\n    ...common,\n    bg: 'primary',\n    color: 'white',\n    '&:focus': {\n      outline: 'none',\n      bg: 'primaryDark',\n    },\n  },\n  outline: {\n    ...common,\n    bg: 'transparent',\n    boxShadow: `0 0 0 2px inset ${colors.primary}`,\n    color: 'primary',\n    '&:focus': {\n      outline: 'none',\n      boxShadow: `0 0 0 2px inset ${colors.primaryDark}`,\n      color: 'primaryDark',\n    },\n  },\n};\n","const common = {\n  borderRadius: 'large',\n  py: '0.75em',\n  px: '1.25em',\n};\n\nexport const cards = {\n  primary: {\n    ...common,\n    bg: 'white',\n    border: '1px solid',\n    borderColor: 'border',\n  },\n};\n","import { colors } from './colors';\nimport { typography } from './typography';\nimport { radii } from './radii';\nimport { space } from './space';\nimport { buttons } from './variants/buttons';\nimport { cards } from './variants/cards';\n\nexport const theme: any = {\n  space,\n  breakpoints: ['0', '40em', '52em', '87.5em', '103.125em', '108.125em'],\n  radii,\n  colors,\n  buttons,\n  variants: {\n    cards,\n  },\n  ...typography,\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\nimport { fetchRates as fetchRatesAction } from './reducer';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const useAsyncRates = () => {\n  const dispatch = useAppDispatch();\n  const rates = useAppSelector((state) => state.application.rates);\n  const fetchRates = () => dispatch(fetchRatesAction());\n  return [rates, fetchRates] as const;\n};\n","import React, { useEffect } from 'react';\nimport { ThemeProvider } from 'theme-ui';\nimport { store } from '../state/store';\nimport { Provider } from 'react-redux';\nimport { Flex } from 'components/Flex';\nimport { Card } from 'components/Card';\nimport { Text } from 'components/Text';\nimport { Button } from 'components/Button';\nimport { theme } from 'theme';\nimport { useAsyncRates } from 'state/hooks';\n\nconst InnerComponentForReduxProvider = () => {\n  const [rates, fetchRates] = useAsyncRates();\n\n  useEffect(() => {\n    fetchRates();\n  }, []);\n  console.log({ rates });\n\n  return <h1>rates</h1>;\n};\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Flex\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          width=\"100vw\"\n          height=\"100vh\"\n          bg=\"background\"\n        >\n          <Card width=\"100%\" maxWidth=\"20em\">\n            <Text variant=\"h4\">Hello, welcome to Nexus Mutual</Text>\n            <Text as=\"p\" mt=\"2em\">\n              I think i'm just text. That's pretty cool, right?\n            </Text>\n            <Text as=\"div\" mt=\"1em\" mb=\"2em\">\n              Test my buttons!\n            </Text>\n            <Button width=\"100%\" my=\"0.5em\">\n              Primary Button\n            </Button>\n            <Button variant=\"outline\" width=\"100%\">\n              Outline Button\n            </Button>\n          </Card>\n          <InnerComponentForReduxProvider />\n        </Flex>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './app';\nimport './index.css';\nimport { store } from './state/store';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}